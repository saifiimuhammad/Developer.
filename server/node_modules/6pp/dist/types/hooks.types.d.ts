import { CSSProperties, ReactElement } from "react";
interface UseFetchDataParams<T> {
    url: string;
    credentials?: RequestCredentials;
    key?: string;
    dependencyProps: (string | number | boolean)[];
    successCallback?: (data: T) => void;
    errorCallback?: (error: string) => void;
}
interface UseMutionParams<T> {
    url: string;
    method?: "POST" | "PUT" | "DELETE" | "PATCH" | "GET";
    credentials?: RequestCredentials;
    key?: string;
    successCallback?: (data: T) => void;
    errorCallback?: (error: string, initialData?: Record<string, unknown>) => void;
}
type UseConfirmModalProps = {
    title?: string;
    subtitle?: string;
    confirmHandler: Function;
};
type ConfirmModalProps = {
    containerStyles?: CSSProperties;
    titleStyles?: CSSProperties;
    subtitleStyles?: CSSProperties;
    noBtnStyles?: CSSProperties;
    yesBtnStyles?: CSSProperties;
    containerClassName?: string;
};
type UseRatingPropsType = {
    IconFilled: ReactElement;
    IconOutline: ReactElement;
    maxRating?: number;
    value?: number;
    selectable?: boolean;
    styles?: CSSProperties;
};
export type { UseFetchDataParams, UseMutionParams, ConfirmModalProps, UseConfirmModalProps, UseRatingPropsType, };
